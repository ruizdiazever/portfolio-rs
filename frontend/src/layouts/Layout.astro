---
import { getLocale } from "@paraglide/runtime";
import { ClientRouter } from "astro:transitions";
import Footer from "$lib/components/common/Footer.astro";
import Header from "$lib/components/common/Header.astro";
import Toast from "$lib/components/common/toast.svelte";
import { ModeWatcher } from "mode-watcher";
import SEO from "$lib/components/common/SEO.astro";
import "$lib/styles/app.css";

interface Props {
    description?: string;
    title: string;
    preloadImgLCP?: string;
    canonical?: string;
    image?: string;
    isHomePage?: boolean;
    showHeader?: boolean;
    showFooter?: boolean;
    maxWithMd?: boolean;
}
const {
    title,
    description,
    preloadImgLCP,
    canonical,
    image,
    showHeader = true,
    showFooter = true,
    maxWithMd = true,
} = Astro.props;
---

<!doctype html>
<html lang={getLocale()}>
    <head>
        <script is:inline>
            function applyTheme() {
                const storedTheme = localStorage.getItem("mode-watcher-mode");
                const systemDark = window.matchMedia(
                    "(prefers-color-scheme: dark)",
                ).matches;
                const theme =
                    storedTheme === "system"
                        ? systemDark
                            ? "dark"
                            : "light"
                        : storedTheme || (systemDark ? "dark" : "light");
                document.documentElement.classList.toggle(
                    "dark",
                    theme === "dark",
                );
            }

            applyTheme();

            document.addEventListener("astro:after-swap", applyTheme);
        </script>
        <script
            is:inline
            defer
            data-domain="everdev.it"
            src="https://plausible.berli.app/js/script.js"></script>
        <SEO
            title={title}
            description={description}
            preloadImgLCP={preloadImgLCP}
            canonical={canonical}
            image={image}
        />
        <ClientRouter />
    </head>
    <body class="bg-[#fafafa] dark:bg-[#0a0a0a] mx-auto overflow-y-scroll">
        <ModeWatcher client:load />
        <Toast client:idle />
        {showHeader && <Header />}
        <main
            class={`flex flex-col px-4 sm:px-6 lg:px-8 overflow-x-clip flex-1 justify-center mx-auto gap-4 antialiased ${maxWithMd ? "max-w-(--breakpoint-md)" : ""}`}
        >
            <slot />
        </main>
        {showFooter && <Footer />}
    </body>
</html>

<style>
    html,
    body {
        margin: 0;
        width: 100%;
        height: 100%;
    }
</style>
