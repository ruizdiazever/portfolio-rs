---
import Hero from "./Hero.astro";
import Blog from "./cards/Blog.astro";
import Experience from "./cards/Experience.astro";
import Project from "./cards/Project.astro";
import Contributions from "./contributions/Main.astro";
import Sections from "./Sections.astro";
import { Icon } from "astro-icon/components";
import { getPosts } from "$lib/common/getPosts";
import { getEntriesFromJson } from "$lib/common/getExperience.ts";
import { getProjectsFromJson } from "$lib/common/getProjectCards.ts";
import { getVisitRequest } from "$lib/common/getViews.ts";
import { urls } from "$lib/common/urls";
import * as m from "@paraglide/messages.js";
import { languageTag } from "@paraglide/runtime";
import Divider from "$lib/components/common/Divider.astro";

const posts = await getPosts();
const entries = await getEntriesFromJson();
const projects = await getProjectsFromJson();

const postViews = await Promise.all(
    posts.map((post) => getVisitRequest(post.id)),
);
---

<Hero transition:name="hero" />
<Contributions transition:name="contributions" />
<Sections />

<main class="space-y-16 mt-16" transition:name="main">
    <section transition:name="blog-section">
        <div
            class="flex justify-between items-center mb-6"
            transition:name="blog-header"
        >
            <h1 class="text-5xl font-bold" transition:name="blog-title">
                {m.blog()}
            </h1>
            <a
                href={urls.articles}
                class="flex items-center gap-2 text-sm text-secondary-foreground font-semibold"
                transition:name="blog-more-link"
            >
                {m.more()}
                <Icon name="arrow-right" title="LinkedIn" size="0.8rem" />
            </a>
        </div>
        <div class="space-y-6" transition:name="blog-posts">
            {
                posts
                    .filter((post) => post.active)
                    .sort((a, b) => (b.pinned ? 1 : 0) - (a.pinned ? 1 : 0))
                    .map((post, index, filteredPosts) => {
                        const postView = postViews.find(
                            (view) => view.projectId === post.id,
                        );
                        return (
                            <div transition:name={`blog-post-${post.id}`}>
                                <Blog
                                    title={post.title[languageTag()]}
                                    pinned={post.pinned}
                                    url={`/${languageTag()}${post.url}`}
                                    description={
                                        post.description[languageTag()]
                                    }
                                    views={postView?.visits || 0}
                                    tags={post.tags}
                                    date={post.date}
                                />
                                {index < filteredPosts.length - 1 && (
                                    <Divider
                                        transition:name={`blog-divider-${index}`}
                                    />
                                )}
                            </div>
                        );
                    })
            }
        </div>
    </section>

    <section transition:name="sof-section">
        <h1 class="text-5xl font-bold mb-6" transition:name="sof-title">
            {m.software()}
        </h1>
        <div
            class="grid grid-cols-1 lg:grid-cols-2 gap-6"
            transition:name="software-grid"
        >
            {
                projects.map((entry) => (
                    <div transition:name={`project-${entry.title}`}>
                        <Project
                            url={`/${languageTag()}${entry.url}`}
                            title={entry.title}
                            repository={entry.repository}
                            description={entry.description[languageTag()]}
                            tech={entry.tech}
                        />
                    </div>
                ))
            }
        </div>
    </section>

    <section transition:name="experience-section">
        <h1 class="text-5xl font-bold mb-6" transition:name="experience-title">
            {m.experience()}
        </h1>
        <div
            class="after:absolute after:inset-y-0 after:w-px after:bg-gray-500/20 relative pl-6 after:left-0 grid gap-10"
            transition:name="experience-grid"
        >
            {
                entries.map((entry) => (
                    <div transition:name={`experience-${entry.company}`}>
                        <Experience
                            startDate={entry.startDate}
                            endDate={entry.endDate}
                            current={entry.current}
                            position={entry.position[languageTag()]}
                            company={entry.company}
                            url={entry.url}
                            description={entry.description[languageTag()]}
                        />
                    </div>
                ))
            }
        </div>
    </section>
</main>
